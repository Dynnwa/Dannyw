{"version":3,"file":"component---src-pages-404-js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMK,MAAN,SAAqBJ,4CAArB,CAA+B;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL,GAAiBC,UAAU,CAAC,MAAM;AAChC,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAF0B,EAExB,GAFwB,CAA3B;AAGD;;AAEDK,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKH,SAAT,EAAoB;AAClBI,MAAAA,YAAY,CAAC,KAAKJ,SAAN,CAAZ;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKV,KAA1B;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,wBACE,2DAAC,+CAAD;AACE,WAAK,cADP;AAUE,YAAM,EAAEU,IAAI,iBACV,uIACE,2DAAC,oDAAD;AACE,aAAK,EAAEA,IAAI,CAACC,IAAL,CAAUC,YAAV,CAAuBC,KADhC;AAEE,YAAI,EAAE,CACJ;AAAEC,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,OAAO,EAAE;AAAhC,SADI,EAEJ;AAAED,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,OAAO,EAAE;AAA7B,SAFI;AAFR,sBAOE;AAAM,YAAI,EAAC;AAAX,QAPF,CADF,eAUE;AAAK,iBAAS,EAAEd,WAAW,GAAG,sBAAH,GAA4B;AAAvD,SACGQ,QADH,CAVF,CAXJ;AAAA;AAAA,MADF;AA6BD;;AApD4B;;AAuD/BZ,MAAM,CAACmB,SAAP,GAAmB;AACjBP,EAAAA,QAAQ,EAAEf,mEAAyBwB;AADlB,CAAnB;AAIA,iEAAerB,MAAf;;;;;;;;;;;;;;;;;;AClEA;AAEA;;AAEA,MAAMsB,SAAS,GAAG,mBAChB,2DAAC,0DAAD,qBACE;AAAS,IAAE,EAAC;AAAZ,gBACE,wFACE,mFADF,CADF,eAIE,wFAJF,CADF,CADF;;AAWA,iEAAeA,SAAf","sources":["webpack://gatsby-starter-overflow/./src/components/Layout.js","webpack://gatsby-starter-overflow/./src/pages/404.js","webpack://gatsby-starter-overflow/./src/assets/sass/main.scss"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport '../assets/sass/main.scss';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPreloaded: true,\n    };\n  }\n\n  componentDidMount() {\n    this.timeoutId = setTimeout(() => {\n      this.setState({ isPreloaded: false });\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { isPreloaded } = this.state;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                { name: 'description', content: 'Overflow' },\n                { name: 'keywords', content: 'site, web' },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <div className={isPreloaded ? 'main-body is-preload' : 'main-body'}>\n              {children}\n            </div>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\n\nconst IndexPage = () => (\n  <Layout>\n    <section id=\"header\">\n      <header>\n        <h2>NOT FOUND</h2>\n      </header>\n      <p>Not a valid URL</p>\n    </section>\n  </Layout>\n);\n\nexport default IndexPage;\n",""],"names":["React","Component","PropTypes","Helmet","StaticQuery","Layout","constructor","props","state","isPreloaded","componentDidMount","timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","render","children","data","site","siteMetadata","title","name","content","propTypes","node","isRequired","IndexPage"],"sourceRoot":""}